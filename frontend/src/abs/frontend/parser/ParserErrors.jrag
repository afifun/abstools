
import abs.frontend.parser.ParserError;

aspect ParserErrors {

    private java.util.List<ParserError> CompilationUnit.parserErrors = new ArrayList<ParserError>();
    private java.util.List<ParserError> Model.parserErrors = new ArrayList<ParserError>();
    
    public void CompilationUnit.setParserErrors(java.util.List<ParserError> errors) {
    	parserErrors = errors;
    }
    
	public boolean CompilationUnit.hasParserErrors() {
		assert getParserErrors() != null : this;
		return !getParserErrors().isEmpty();
	}

	public java.util.List<ParserError> CompilationUnit.getParserErrors() {
		return parserErrors;
	}

	public boolean Model.hasParserErrors() {
	    assert getParserErrors() != null : this;
		return !getParserErrors().isEmpty();
	}

	public java.util.List<ParserError> Model.getParserErrors() {
            if (parserErrors.isEmpty()) {
		for (CompilationUnit u : getCompilationUnits()) {
			if (u.getParserErrors() != null) {
				parserErrors.addAll(u.getParserErrors());
			}
		}
            }
            return parserErrors;
	}
	
}
// Local Variables:
// mode: java
// End:
